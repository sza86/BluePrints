blueprint:
  name: Proste wyłączenie oświetlenia po bezruchu (1–3 źródła, 1–2 czujniki)
  description: >
    Wyłącza jedno, dwa lub trzy wskazane oświetlenia po czasie bezruchu wykrytym przez jeden lub dwa czujniki ruchu.
  domain: automation
  author: szpila86
  source_url: https://github.com/sza86/BluePrints/edit/main/szablon_wylaczenia_swiatla.yaml

  input:
    motion_sensor_1:
      name: Czujnik ruchu #1 (obowiązkowy)
      selector:
        entity:
          domain: binary_sensor
          device_class: motion

    motion_sensor_2:
      name: Czujnik ruchu #2 (opcjonalny)
      default: []
      selector:
        entity:
          domain: binary_sensor
          device_class: motion

    light_target_1:
      name: Główne oświetlenie (obowiązkowe)
      selector:
        entity:
          domain: light

    light_target_2:
      name: Dodatkowe oświetlenie #1 (opcjonalne)
      default: []
      selector:
        entity:
          domain: light
          multiple: false

    light_target_3:
      name: Dodatkowe oświetlenie #2 (opcjonalne)
      default: []
      selector:
        entity:
          domain: light
          multiple: false

    delay_time:
      name: Czas bezruchu (sekundy)
      default: 60
      selector:
        number:
          min: 5
          max: 3600
          unit_of_measurement: seconds
          mode: slider

mode: restart
max_exceeded: silent

trigger:
  - platform: state
    entity_id: !input motion_sensor_1
    to: 'off'
    for:
      seconds: !input delay_time
  - platform: state
    entity_id: !input motion_sensor_2
    to: 'off'
    for:
      seconds: !input delay_time

variables:
  motion_sensor_1: !input motion_sensor_1
  motion_sensor_2: !input motion_sensor_2
  light1: !input light_target_1
  light2: !input light_target_2
  light3: !input light_target_3

condition:
  - condition: template
    value_template: >
      {{ is_state(motion_sensor_1, 'off') and
         (motion_sensor_2 == [] or is_state(motion_sensor_2, 'off')) }}

action:
  - choose:
      - conditions: "{{ is_state(light1, 'on') }}"
        sequence:
          - service: homeassistant.turn_off
            target:
              entity_id: "{{ light1 }}"
  - choose:
      - conditions: "{{ light2 != [] and is_state(light2, 'on') }}"
        sequence:
          - service: homeassistant.turn_off
            target:
              entity_id: "{{ light2 }}"
  - choose:
      - conditions: "{{ light3 != [] and is_state(light3, 'on') }}"
        sequence:
          - service: homeassistant.turn_off
            target:
              entity_id: "{{ light3 }}"
