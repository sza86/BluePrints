blueprint:
  name: Proste wyłączenie oświetlenia po bezruchu (1–3 źródła, 1–2 czujniki, czas
    w minutach)
  description: 'Wyłącza jedno, dwa lub trzy wskazane oświetlenia po czasie bezruchu
    wykrytym przez jeden lub dwa czujniki ruchu. Czas podawany w minutach.

    '
  domain: automation
  author: szpila86
  source_url: https://raw.githubusercontent.com/sza86/BluePrints/main/szablon_wylaczenia_swiatla.yaml
  input:
    motion_sensor_1:
      name: Czujnik ruchu
      selector:
        entity:
          domain:
          - binary_sensor
          device_class:
          - motion
          multiple: false
    motion_sensor_2:
      name: Czujnik ruchu
      default: []
      selector:
        entity:
          domain:
          - binary_sensor
          device_class:
          - motion
          multiple: false
    light_target_1:
      name: Główne oświetlenie (obowiązkowe)
      selector:
        entity:
          domain:
          - light
          multiple: false
    light_target_2:
      name: Dodatkowe oświetlenie
      default: []
      selector:
        entity:
          domain:
          - light
          multiple: false
    light_target_3:
      name: Dodatkowe oświetlenie
      default: []
      selector:
        entity:
          domain:
          - light
          multiple: false
    delay_time:
      name: Czas bezruchu (minuty)
      default: 1
      selector:
        number:
          min: 1.0
          max: 60.0
          unit_of_measurement: minutes
          mode: slider
          step: 1.0
mode: restart
max_exceeded: silent
trigger:
- platform: state
  entity_id: !input motion_sensor_1
  to: 'off'
  for:
    minutes: !input delay_time
- platform: state
  entity_id: !input motion_sensor_2
  to: 'off'
  for:
    minutes: !input delay_time
variables:
  motion_sensor_1: !input motion_sensor_1
  motion_sensor_2: !input motion_sensor_2
  light1: !input light_target_1
  light2: !input light_target_2
  light3: !input light_target_3
condition:
- condition: template
  value_template: "{{ is_state(motion_sensor_1, 'off') and\n   (motion_sensor_2 ==
    [] or is_state(motion_sensor_2, 'off')) }}\n"
action:
- choose:
  - conditions: '{{ is_state(light1, ''on'') }}'
    sequence:
    - service: logbook.log
      data:
        name: Automatyzacja oświetlenia
        message: Wyłączono {{ light1 }} po wykryciu braku ruchu.
        entity_id: '{{ light1 }}'
    - service: homeassistant.turn_off
      target:
        entity_id: '{{ light1 }}'
- choose:
  - conditions: '{{ light2 != [] and is_state(light2, ''on'') }}'
    sequence:
    - service: logbook.log
      data:
        name: Automatyzacja oświetlenia
        message: Wyłączono {{ light2 }} po wykryciu braku ruchu.
        entity_id: '{{ light2 }}'
    - service: homeassistant.turn_off
      target:
        entity_id: '{{ light2 }}'
- choose:
  - conditions: '{{ light3 != [] and is_state(light3, ''on'') }}'
    sequence:
    - service: logbook.log
      data:
        name: Automatyzacja oświetlenia
        message: Wyłączono {{ light3 }} po wykryciu braku ruchu.
        entity_id: '{{ light3 }}'
    - service: homeassistant.turn_off
      target:
        entity_id: '{{ light3 }}'
